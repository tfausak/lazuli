{
  "jobs": {
    "build": {
      "name": "Build on ${{ matrix.platform }}",
      "runs-on": "${{ matrix.platform }}-${{ matrix.version }}",
      "steps": [
        {
          "uses": "actions/checkout@v3"
        },
        {
          "run": "mkdir artifact"
        },
        {
          "id": "artifact",
          "run": "echo 'directory=artifact/${{ matrix.platform }}' >> $GITHUB_OUTPUT",
          "shell": "bash"
        },
        {
          "run": "mkdir ${{ steps.artifact.outputs.directory }}"
        },
        {
          "id": "haskell",
          "uses": "haskell/actions/setup@v2",
          "with": {
            "cabal-version": "3.8.1.0",
            "ghc-version": "9.4.4"
          }
        },
        {
          "run": "cabal sdist --output-dir ${{ steps.artifact.outputs.directory }}"
        },
        {
          "run": "cabal configure --enable-optimization=2 --enable-tests --flags pedantic --jobs"
        },
        {
          "run": "cat cabal.project.local"
        },
        {
          "run": "cp cabal.project.local ${{ steps.artifact.outputs.directory }}"
        },
        {
          "run": "cabal freeze"
        },
        {
          "run": "cat cabal.project.freeze"
        },
        {
          "run": "cp cabal.project.freeze ${{ steps.artifact.outputs.directory }}"
        },
        {
          "run": "cabal outdated --v2-freeze-file cabal.project.freeze"
        },
        {
          "uses": "actions/cache@v3",
          "with": {
            "key": "${{ matrix.platform }}-${{ hashFiles('cabal.project.freeze') }}",
            "path": "${{ steps.haskell.outputs.cabal-store }}",
            "restore-keys": "${{ matrix.platform }}-"
          }
        },
        {
          "run": "cabal build --only-download"
        },
        {
          "run": "cabal build --only-dependencies"
        },
        {
          "run": "cabal build"
        },
        {
          "run": "cp \"$( cabal list-bin lazuli )\" ${{ steps.artifact.outputs.directory }}"
        },
        {
          "uses": "svenstaro/upx-action@v2",
          "with": {
            "files": "${{ steps.artifact.outputs.directory }}/lazuli${{ matrix.extension }}"
          }
        },
        {
          "uses": "actions/upload-artifact@v3",
          "with": {
            "name": "lazuli-${{ github.sha }}",
            "path": "artifact"
          }
        },
        {
          "run": "cabal run -- lazuli-test-suite --randomize --strict"
        }
      ],
      "strategy": {
        "matrix": {
          "include": [
            {
              "platform": "macos",
              "version": "12"
            },
            {
              "platform": "ubuntu",
              "version": "22.04"
            },
            {
              "extension": ".exe",
              "platform": "windows",
              "version": "2022"
            }
          ]
        }
      }
    },
    "cabal": {
      "name": "Cabal",
      "runs-on": "ubuntu-22.04",
      "steps": [
        {
          "uses": "actions/checkout@v3"
        },
        {
          "run": "cabal check"
        }
      ]
    },
    "deploy": {
      "if": "github.event_name != 'schedule' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)",
      "name": "Deploy",
      "needs": "docker",
      "runs-on": "ubuntu-22.04",
      "steps": [
        {
          "uses": "actions/checkout@v3"
        },
        {
          "uses": "superfly/flyctl-actions/setup-flyctl@67ddda2a87628f1aff28a54b8a708879ec62c80f"
        },
        {
          "env": {
            "FLY_API_TOKEN": "${{ secrets.FLY_API_TOKEN }}",
            "FLY_APP": "${{ secrets.FLY_APP }}"
          },
          "run": "flyctl deploy --image ghcr.io/${{ github.repository }}:sha-${{ github.sha }}"
        }
      ]
    },
    "docker": {
      "name": "Docker",
      "needs": "build",
      "runs-on": "ubuntu-22.04",
      "steps": [
        {
          "uses": "actions/checkout@v3"
        },
        {
          "uses": "actions/download-artifact@v3",
          "with": {
            "name": "lazuli-${{ github.sha }}",
            "path": "artifact"
          }
        },
        {
          "run": "tar xf lazuli-*.tar.gz",
          "working-directory": "./artifact/ubuntu"
        },
        {
          "run": "mv artifact/ubuntu/lazuli-*/data artifact/ubuntu/lazuli docker"
        },
        {
          "run": "chmod +x docker/lazuli"
        },
        {
          "id": "meta",
          "uses": "docker/metadata-action@v4",
          "with": {
            "flavor": "latest=false",
            "images": "ghcr.io/${{ github.repository }}",
            "tags": "type=sha,format=long"
          }
        },
        {
          "uses": "docker/login-action@v2",
          "with": {
            "password": "${{ secrets.GITHUB_TOKEN }}",
            "registry": "ghcr.io",
            "username": "${{ github.actor }}"
          }
        },
        {
          "uses": "docker/build-push-action@v4",
          "with": {
            "build-args": "LAZULI_COMMIT=${{ github.sha }}",
            "context": "docker",
            "push": "${{ github.event_name != 'schedule' }}",
            "tags": "${{ steps.meta.outputs.tags }}"
          }
        }
      ]
    },
    "hlint": {
      "name": "HLint",
      "runs-on": "ubuntu-22.04",
      "steps": [
        {
          "uses": "actions/checkout@v3"
        },
        {
          "uses": "haskell/actions/hlint-setup@v2",
          "with": {
            "version": 3.5
          }
        }
      ]
    },
    "ormolu": {
      "name": "Ormolu",
      "runs-on": "ubuntu-22.04",
      "steps": [
        {
          "uses": "actions/checkout@v3"
        },
        {
          "uses": "mrkkrp/ormolu-action@v9"
        }
      ]
    }
  },
  "name": "Workflow",
  "on": {
    "push": null,
    "schedule": [
      {
        "cron": "0 0 * * *"
      }
    ]
  }
}
